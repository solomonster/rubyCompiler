PROGRAM         : COMPSTMT

COMPSTMT        : STMTS OPT_TERMS

STMTS           : NONE
                | STMT
                | STMTS TERMS STMT

OPT_TERMS       : 
                | TERMS

TERMS           : TERM
                | TERMS ';'

TERM            : ';'
                | '\n' 

STMT            : STMT if EXPR
                | STMT while EXPR
                | EXPR
                | return
                | return CALL_ARGS
                | STMT-IF
                | STMT-WHILE 
                | FUNCTION 

STMT-IF         :if EXPR THEN     
                    COMPSTMT
                  IF-TAIL
                  end

IF-TAIL         : OPT-ELSE
                |ELSIF EXPR THEN
                   COMPSTMT
                 IF-TAIL

OPT-ELSE        :NONE
                |ELSE CMPSTMT  

STMT-WHILE      : while EXPR DO COMPSTMT end                

DO              : TERM 
                | do 
                | TERM do
                           

EXPR            : INT-LITERAL
                | STRING-LITERAL
                | VARIABLE
                | '[' ']'
                | EXPR and EXPR
                | EXPR or EXPR
                | not EXPR
                | LHS = EXPR
                | EXPR tDOT2 EXPR
                | EXPR tDOT3 EXPR
                | EXPR tOROP EXPR
                | EXPR tANDOP EXPR 
                | EXPR '+' EXPR 
                | EXPR '-' EXPR 
                | EXPR '*' EXPR 
                | EXPR '/' EXPR
                | tUPLUS EXPR 
                | tMINUS EXPR
                | EXPR '>' EXPR 
                | EXPR tGEQ EXPR 
                | EXPR '<' EXPR 
                | EXPR tLEQ EXPR
                | EXPR tEQ EXPR 
                | EXPR tNEQ EXPR
                | '!' EXPR
                | COMMAND            
                | '!' COMMAND
                | ARG
                | PRIMARY
                

          

COMMAND         : IDENTIFIER CALL_ARGS
     

FUNCTION        : IDENTIFIER 
                | IDENTIFIER '(' ')'
                | IDENTIFIER '(' CALL_ARGS')'
                | def FNAME ARGDECL       
                    COMPSTMT
                  end

THEN            : TERM 
                | then 
                | TERM then 



LHS             : VARIABLE                    
                | PRIMARY "[" "]"
                | PRIMARY "["ARGS"]"


CALL_ARGS       : ARGS
                | COMMAND

ARGS            :ARG
                |ARGS ',' ARG

ARG             :NONE
                |


PRIMARY         :'(' COMPSTMT ')'                              
                |PRIMARY '[' ']'                
                |PRIMARY '[' ARGS ']'   
                |"[" "]"
                |"["ARGS"]"
                | return 
                


ARGDECL         : "(" ARGLIST ")"       
                | ARGLIST TERM


ARGLIST        :IDENTIFIER
               |ARGLIST,IDENTIFIER 


VARIABLE        : VARNAME


FNAME           : IDENTIFIER | '..'| '==' 
                | > | >= | < | + | - | * | / 

VARNAME         : IDENTIFIER




                




